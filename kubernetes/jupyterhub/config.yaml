hub:
  db:
    type: sqlite-memory
  extraConfig:
    overrideServiceAccount: |
      # this script allows serviceAccountName to use dynamic naming based on {username}"
      async def override_service_account_hook(kube_spawner):
        if kube_spawner.service_account is not None:
          kube_spawner.service_account = kube_spawner._expand_user_properties(kube_spawner.service_account)

      c.KubeSpawner.pre_spawn_hook = override_service_account_hook

proxy:
  secretToken: "37d978c42bd042da78a1afa5a32dacaaee863ded4926eca2b30cc3005832d636"

auth:
  dummy:
    password: "password"

singleuser:
  image:
    name: triplai/arc-jupyter
    tag: latest
    pullPolicy: Always
  serviceAccountName: "{username}"
  storage:
    type: none
  memory:
    limit: 4G
    guarantee: 4G
  extraEnv:
    JAVA_OPTS: -Xmx4G
  profileList:
    - display_name: "Arc"
      description: "Arc-Jupyter Development Environment"
      default: true
      kubespawner_override:
        image: triplai/arc-jupyter:latest
        port: 8080
        # copy in the notebook customisations
        lifecycle_hooks:
          postStart:
            exec:
              command: ["cp", "-r", "/opt/.jupyter", "/home/jovyan/.jupyter"]
